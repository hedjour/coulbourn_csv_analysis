if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
}
View(df)
else
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
else {
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
}
else
if (df$Protocol[1] == 1)
df$CS = NA
df$Trial = NA
else
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS[data$Current.State!=3] = 'Context'
df$CS[data$Current.State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,6,7,8,9,12))
df = hab
df = subset(df,Time!=0,select = c(3,4,5,6,7,8,9,12))
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS[data$Current.State!=3] = 'Context'
df$CS[data$Current.State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Protocol+Session+Trial+CS, data=df, mean)
View(data)
df = hab
df = ext17
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,6,7,8,9,12))
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS[data$Current.State!=3] = 'Context'
df$CS[data$Current.State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
data = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
data = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
View(df)
df$CS[data$Current.State!=3] = 'Context'
df$CS = 'Context'
df$CS[data$Current.State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
data = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
View(data)
if (df$Protocol[1] == 4) {trial = 2}
if (df$Protocol[1] == 4) trial = 2 else trial = 1
for (x in 1:nrow(df))
{
df$Trial[x] = trial
if (x != nrow(df) & df$Current.State[x] == 3 & df$Current.State[x+1] == 1)
{trial <- trial + 1}
}
for (x in 1:nrow(df))
{
df$Trial[x] = trial
if (x != nrow(df) & df$Current.State[x] == 3 & df$Current.State[x+1] == 1)
trial = trial + 1
}
x = 1
df$Trial[x] = trial
View(df)
if (x != nrow(df) & df$Current.State[x] == 3 & df$Current.State[x+1] == 1)
trial = trial + 1
df = ext17
df$Trial[x] = trial
if (x != nrow(df) & df$Current.State[x] == 3 & df$Current.State[x+1] == 1)
{trial <- trial + 1}
x != nrow(df)
df$Current.State[x] == 3
View(df)
View(hab)
df$Current State[x] == 3
View(hab)
names(hab)
?fread
names(hab) <- sub(" ", ".", names(hab))
setnames(hab,sub(" ", ".")
)
)
setnames(hab,sub(" ", ".", names(hab)))
View(hab)
View(hab)
View(ltm)
View(hab)
setnames(hab,names(sr))
View(df)
df = subset(df,Time!=0,select = c(3,4,5,6,7,8,9,12))
View(df)
setnames(df[7:8],c('State','Lick'))
vars = names(df)
vars[7:8] = c('State','Lick')
View(ext17)
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[data$Current.State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
source('label_trials.R')
data = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
df = ext17
source('label_trials.R')
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,6,7,8,9,12))
vars = names(df)
##rename 'Current State' and 'A1 -' variables to 'State' and 'Lick'
vars[7:8] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
data = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
?lapply
View(df)
View(ext17)
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
df = ext17
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
vars = names(df)
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
data = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
data = unsplit(lapply(subjects,label_trials),list(df$Subject,df$Protocol,df$Session))
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
data = unsplit(lapply(subjects,label_trials),list(df$Subject,df$Protocol,df$Session))
traceback()
lapply
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
df=ext17
df = subset(df,Time!=0,select = c(3,4,5,6,7,8,9,12))
df$Session = as.numeric(as.factor(df$Session))
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
View(df)
getwd()
setwd('../GitRepos/')
setwd(..)
setwd('..')
ls
setwd('GitRepos')
setwd('../GitRepos//graphic-state-munging/Lickometer')
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
df = ext17
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
vars = names(df)
##rename 'Current State' and 'A1 -' variables to 'State' and 'Lick'
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Protocol+Session+Trial+CS, data=df, mean)
df$Protocol[hab$Protocol == 1] = 'Habituation'
df$Protocol[df$Protocol == 2] = 'Acquisition'
df$Protocol[df$Protocol != 2 & df$Protocol != 6] = 'Extinction'
df$Protocol[df$Protocol == 6] = 'LTM'
View(df)
View(df)
vars = names(df)
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Protocol+Session+Trial+CS, data=df, mean)
df$Protocol[hab$Protocol == 1] = 'Habituation'
df$Protocol[df$Protocol == 2] = 'Acquisition'
df$Protocol[df$Protocol != 2 & df$Protocol != 6] = 'Extinction'
df$Protocol[df$Protocol == 6] = 'LTM'
View(df)
source('label_trials.R')
source('lick_time.R')
df = ext17
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
vars = names(df)
##rename 'Current State' and 'A1 -' variables to 'State' and 'Lick'
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
View(df)
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
View(df)
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
traceback()
source('lick_time.R')
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Station+Protocol+Session+Trial+CS, data=df, mean)
View(df)
df$Protocol[hab$Protocol == 1] = 'Habituation'
df$Protocol[df$Protocol == 1] = 'Habituation'
df$Protocol[df$Protocol == 2] = 'Acquisition'
df$Protocol[df$Protocol != 2 & df$Protocol != 6] = 'Extinction'
df$Protocol[df$Protocol == 6] = 'LTM'
View(df)
df = hab
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
vars = names(df)
##rename 'Current State' and 'A1 -' variables to 'State' and 'Lick'
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Station+Protocol+Session+Trial+CS, data=df, mean)
df = hab
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
vars = names(df)
##rename 'Current State' and 'A1 -' variables to 'State' and 'Lick'
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
##not sure why extra session labels were generated for retrieval session,
##but this fixes the problem
if (df$Protocol[1] == 3)
{
df$Session[df$Session==2] = 1
df$Session[df$Session==3 | df$Session==4] = 2
}
if (df$Protocol[1] == 1)
{
df$CS = NA
df$Trial = NA
} else
{
df$CS = 'Context'
df$CS[df$State==3] = 'Tone'
df$Trial = 0
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = unsplit(lapply(subjects,label_trials),
list(df$Subject,df$Protocol,df$Session))
}
View(df)
subjects = split(df,list(df$Subject,df$Protocol,df$Session,df$Trial,df$CS),drop=T)
subjects = split(df,list(df$Subject,df$Protocol,df$Session),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Station+Protocol+Session+Trial+CS, data=df, mean)
View(df)
df = df[c('Subject','Station','Protocol','Session','Trial','CS','Drink.Time')]
View(df)
dataList = list(hab,ret,ext17,ext18,ltm,sr)
source('clean_data.R')
dataList = lapply(dataList,clean_data)
dataList['sr']$Session = 3
view dataList['sr']
View dataList['sr']
dataList[7]
dataList[-7]
dataList = dataList[-7]
dataList[6]
dataList[[6]]
dataList[[6]]$Session = 3
dataList[[6]]
data = rbind(dataList)
View(data)
data = rbind(dataList[[1:6]])
data = rbind.fill(dataList)
View(data)
data[[1]]
dataList[[1]]
df = hab
source('label_trials.R')
source('lick_time.R')
df = subset(df,Time!=0,select = c(3,4,5,7,8,9,12))
vars = names(df)
vars[6:7] = c('State','Lick')
setnames(df,vars)
df$Session = as.numeric(as.factor(df$Session))
df$CS = NA
df$Trial = NA
subjects = split(df,list(df$Subject,df$Session),drop=T)
df = rbind.fill(lapply(subjects,lick_time))
remove(subjects)
df = aggregate(Drink.Time ~ Subject+Station+Protocol+Session+Trial+CS, data=df, mean)
hab = aggregate(Drink.Time ~ Subject+Station+Protocol+Session, data=hab, mean)
View(df)
df = aggregate(Drink.Time ~ Subject+Station+Protocol+Session, data=df, mean)
View(df)
df$CS = NA
df$Trial = NA
View(df)
df = df[c('Subject','Station','Protocol','Session','Trial','CS','Drink.Time')]
View(df)
source('clean_data.R')
dataList = list(hab,ret,ext17,ext18,ltm,sr)
dataList = lapply(dataList,clean_data)
dataList[[6]]$Session = 3
data = rbind.fill(dataList)
View(data)
View(hab)
View(df)
df$Protocol[df$Protocol == 1] = 'Habituation'
View(df)
df$Protocol[df$Protocol %in% c(3,4,5)] = 'Extinction'
source('clean_data.R')
dataList = list(hab,ret,ext17,ext18,ltm,sr)
dataList = lapply(dataList,clean_data)
dataList[[6]]$Session = 3
data = rbind.fill(dataList)
View(data)
